### API Gateway Health Check
GET http://localhost:3000/health

### API Gateway Main Endpoint
GET http://localhost:3000/
### Test User Service
GET http://localhost:3000/services/user/test
###
### USER SERVICE ENDPOINTS
###

### 1. Register User
POST http://localhost:3000/services/user/register
Content-Type: application/json

{
  "email": "user1@example.com",
  "password": "password123",
  "firstName": "John",
  "lastName": "Doe",
  "phone": "0123456789"
}

### 2. Login User
POST http://localhost:3000/services/user/login
Content-Type: application/json

{
  "email": "user1@example.com",
  "password": "123456"
}

### 3. Get User Profile (require JWT token)
GET http://localhost:3000/services/user/profile
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiZW1haWwiOiJ1c2VyMUBleGFtcGxlLmNvbSIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNzQ4NTM4ODk1LCJleHAiOjE3NDg2MjUyOTV9.7OKtzz6qmY8JrweBOi0x_WYQgqh_qrgKJT0LosnCVTk

### 4. Get All Users (require JWT token)

GET http://localhost:3000/services/user/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiZW1haWwiOiJ1c2VyMUBleGFtcGxlLmNvbSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc0ODUzOTEwOSwiZXhwIjoxNzQ4NjI1NTA5fQ.gB3ESbyecKeURDJxN3N76XpX3-Y6cERTiqWKfWqDZYc
###
### ROOM SERVICE ENDPOINTS
###

### 5. Get All Rooms
GET http://localhost:3000/services/room/

### 6. Create Room (require JWT token)
POST http://localhost:3000/services/room/
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "name": "Conference Room A",
  "description": "Large conference room with projector",
  "capacity": 20,
  "price": 500000,
  "amenities": ["projector", "whiteboard", "wifi", "air-conditioning"],
  "images": ["room1.jpg", "room2.jpg"]
}

### 7. Get Room by ID
GET http://localhost:3000/services/room/1

### 8. Update Room (require JWT token)
PUT http://localhost:3000/services/room/1
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "name": "Updated Conference Room A",
  "description": "Updated description",
  "capacity": 25,
  "price": 600000
}

### 9. Delete Room (require JWT token)
DELETE http://localhost:3000/services/room/1
Authorization: Bearer YOUR_JWT_TOKEN_HERE

###
### BOOKING SERVICE ENDPOINTS
###

### 10. Get All Bookings (require JWT token)
GET http://localhost:3000/bookings
Authorization: Bearer YOUR_JWT_TOKEN_HERE

### 11. Create Booking (require JWT token)
POST http://localhost:3000/bookings
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "roomId": 1,
  "startTime": "2024-12-30T09:00:00.000Z",
  "endTime": "2024-12-30T17:00:00.000Z",
  "purpose": "Team meeting",
  "attendees": 10
}

### 12. Get Booking by ID (require JWT token)
GET http://localhost:3000/bookings/1
Authorization: Bearer YOUR_JWT_TOKEN_HERE

### 13. Update Booking (require JWT token)
PUT http://localhost:3000/bookings/1
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "purpose": "Updated team meeting",
  "attendees": 15
}

### 14. Cancel Booking (require JWT token)
DELETE http://localhost:3000/bookings/1
Authorization: Bearer YOUR_JWT_TOKEN_HERE

###
### DIRECT SERVICE TESTING (without API Gateway)
###

### User Service Direct
GET http://localhost:3001/

### Room Service Direct
GET http://localhost:3002/

### Booking Service Direct
GET http://localhost:3003/ 